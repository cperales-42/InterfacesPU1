/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyectout1cperales;

import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Clara
 */
public class BuscarPedidos extends javax.swing.JFrame {

    /**
     * Creates new form BuscarPedidos
     */
    private Connection con = null;
    private ResultSet resul = null;
    private Statement stmt = null;
    private DefaultTableModel modeloTabla = new DefaultTableModel();
    
    public BuscarPedidos() {
    initComponents();

        // Declaración de variables
        String bbdd = "jdbc:hsqldb:hsql://localhost/";
        String usuario = "SA";
        String clave = "SA";

        try {
            // Conexión a la base de datos
            Class.forName("org.hsqldb.jdbc.JDBCDriver");
            con = DriverManager.getConnection(bbdd, usuario, clave);
            if (con != null) {
                System.out.println("Connection created successfully");
            } else {
                System.out.println("Problem with creating connection");
            }

            // Ejecutar la consulta
            String sql = "SELECT p.CODIGO, " +  // Incluimos CODIGO como la primera columna oculta
                         "p.DIRECCION,\n" +
                         "p.CODPOSTAL,\n" +
                         "p.CARGO,\n" +
                         "p.FECHAPEDIDO,\n" +
                         "p.FECHAENVIO,\n" +
                         "p.FECHAENTREGA,\n" +
                         "c.nombre,\n" +
                         "ce.nombre,\n" +
                         "e.nombre,\n" +
                         "cl.nomContacto FROM PEDIDOS p " +
                         "JOIN Ciudades c ON p.codCiudad = c.codigo\n" +
                         "JOIN CompEnvios ce ON p.codEmpreEnvio = ce.codigo\n" +
                         "JOIN Empleados e ON p.codEmpleado = e.codigo\n" +
                         "JOIN Clientes cl ON p.codCliente = cl.codigo WHERE 1=1";

            stmt = con.createStatement();
            resul = stmt.executeQuery(sql);

            // Configurar columnas
            String[] nombresColumnas = {
                "Codigo",  // Añadimos "Codigo" como la primera columna
                "Direccion", 
                "CodPostal", 
                "Cargo", 
                "FechaPedido", 
                "FechaEnvio", 
                "FechaEntrega", 
                "Ciudad", 
                "CompaniaEnvio", 
                "Empleado", 
                "Cliente"
            };

            // Crear las columnas del modelo de tabla
            for (String nombreColumna : nombresColumnas) {
                modeloTabla.addColumn(nombreColumna);
            }

            // Cargar los datos en el modelo
            while (resul.next()) {
                Object[] fila = new Object[nombresColumnas.length];
                for (int j = 1; j <= nombresColumnas.length; j++) {
                    fila[j - 1] = resul.getObject(j);
                }
                modeloTabla.addRow(fila);
            }

            // Asignar el modelo a la tabla
            tabla.setModel(modeloTabla);

            // Hacer la primera columna (Codigo) invisible
            tabla.getColumnModel().getColumn(0).setMinWidth(0);
            tabla.getColumnModel().getColumn(0).setMaxWidth(0);
            tabla.getColumnModel().getColumn(0).setWidth(0);

        } catch (Exception e) {
            e.printStackTrace(System.out);
            // Cerrar la conexión
            try {
                con.close(); //con contiene la conexión a la base de datos.
            } catch (SQLException ex) {
                System.out.println("Oops");
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        fechaPedidoJTextField = new javax.swing.JTextField();
        ciudadJComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        compEnviosJList = new javax.swing.JList<>();
        nombreCompJTextField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        jRadioButton9 = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        fechaPedidoJTextField.setToolTipText("Fecha de pedido");
        fechaPedidoJTextField.setBorder(javax.swing.BorderFactory.createTitledBorder("Fecha de pedido"));
        jPanel1.add(fechaPedidoJTextField);

        ciudadJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ciudad", "Seatle", "Tacoma", "Kirkland", "Redmond", "Londres", "Aachen", "Albuquerque", "Anchorage", "Århus", "Barcelona", "Barquisimeto", "Bérgamo", "Berlín", "Berna", "Boise", "Bräcke", "Brandenburgo", "Bruselas", "Buenos Aires", "Butte", "Campinas", "Caracas", "Charleroi", "Cork", "Cowes", "Cunewalde", "Elgin", "Estrasburgo", "Eugenia", "Francfurt", "Génova", "Graz", "Helsinki", "I. de Margarita", "København", "Köln", "Lander", "Leipzig", "Lille", "Lion", "Lisboa", "Luleå", "Madrid", "Mannheim", "Marsella", "México D.F.", "Montreal", "München", "Münster", "Nantes", "Oulu", "París", "Portland", "Reggio Emilia", "Reims", "Resende", "Rio de Janeiro", "Salzburgo", "San Cristóbal", "San Francisco", "Sao Paulo", "Sevilla", "Stavern", "Stuttgart", "Torino", "Toulouse", "Tsawassen", "Vancouver", "Versalles", "Walla Walla", "Warszawa", " " }));
        ciudadJComboBox.setBorder(null);
        jPanel1.add(ciudadJComboBox);

        compEnviosJList.setBorder(null);
        compEnviosJList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Speedy Express", "United Package", "Federal Shipping", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(compEnviosJList);

        jPanel1.add(jScrollPane2);

        nombreCompJTextField.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre de compañía"));
        jPanel1.add(nombreCompJTextField);

        jPanel2.setLayout(new java.awt.GridLayout(3, 3));

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Nancy");
        jPanel2.add(jRadioButton1);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Andrew");
        jPanel2.add(jRadioButton2);

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Janet");
        jPanel2.add(jRadioButton3);

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setText("Margaret");
        jRadioButton4.setBorder(null);
        jPanel2.add(jRadioButton4);

        buttonGroup1.add(jRadioButton5);
        jRadioButton5.setText("Steven");
        jPanel2.add(jRadioButton5);

        buttonGroup1.add(jRadioButton6);
        jRadioButton6.setText("Michael");
        jPanel2.add(jRadioButton6);

        buttonGroup1.add(jRadioButton7);
        jRadioButton7.setText("Robert");
        jPanel2.add(jRadioButton7);

        buttonGroup1.add(jRadioButton8);
        jRadioButton8.setText("Laura");
        jPanel2.add(jRadioButton8);

        buttonGroup1.add(jRadioButton9);
        jRadioButton9.setText("Anne");
        jPanel2.add(jRadioButton9);

        jPanel1.add(jPanel2);

        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        jButton5.setText("Detalle del pedido (selecciona una fila)");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton5);

        jButton1.setText("Buscar pedidos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);

        jButton2.setText("Reiniciar formulario");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        jButton3.setText("Modificar pedido");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1164, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 1119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(384, 384, 384)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        fechaPedidoJTextField.setText("");
        nombreCompJTextField.setText("");
        ciudadJComboBox.setSelectedIndex(0);
        compEnviosJList.clearSelection();
        buttonGroup1.clearSelection();        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     //filtros allá van
     String sql = "SELECT p.CODIGO,\n" +
                 " p.DIRECCION,\n" +
                 " p.CODPOSTAL,\n" +
                 " p.CARGO,\n" +
                 " p.FECHAPEDIDO,\n" +
                 " p.FECHAENVIO,\n" +
                 " p.FECHAENTREGA,\n" +
                 " c.nombre,\n" +
                 " ce.nombre,\n" +
                 " e.nombre,\n" +
                 " cl.nomCompania FROM PEDIDOS p " +
                 "JOIN Ciudades c ON p.codCiudad = c.codigo " +
                 "JOIN CompEnvios ce ON p.codEmpreEnvio = ce.codigo " +
                 "JOIN Empleados e ON p.codEmpleado = e.codigo " +
                 "JOIN Clientes cl ON p.codCliente = cl.codigo " +
                 "WHERE 1=1 ";

    // Filtro de fecha
    if (!fechaPedidoJTextField.getText().isEmpty() && !fechaPedidoJTextField.getText().equals("Fecha de pedido")) {
        sql += " AND p.FECHAPEDIDO = '" + fechaPedidoJTextField.getText() + "'";
    }

    // Filtro de nombre de compañía
    if (!nombreCompJTextField.getText().isEmpty() && !nombreCompJTextField.getText().equals("Nombre de compañia")) {
        sql += " AND cl.nomCompania = '" + nombreCompJTextField.getText().trim() + "'";
    }

    // Filtro de ciudad
    if (ciudadJComboBox.getSelectedIndex() != 0) {
        sql += " AND c.nombre = '" + ciudadJComboBox.getSelectedItem() + "'";
    }

    // Filtro de empresa de envíos
    if (compEnviosJList.getSelectedIndex() != -1) {
        sql += " AND ce.nombre = '" + compEnviosJList.getSelectedValue() + "'";
    }

    // Filtro de empleados basado en los radio buttons seleccionados
    if (buttonGroup1.getSelection() != null) {
        JRadioButton[] radioButtons = new JRadioButton[9];
        radioButtons[0] = jRadioButton1;
        radioButtons[1] = jRadioButton2;
        radioButtons[2] = jRadioButton3;
        radioButtons[3] = jRadioButton4;
        radioButtons[4] = jRadioButton5;
        radioButtons[5] = jRadioButton6;
        radioButtons[6] = jRadioButton7;
        radioButtons[7] = jRadioButton8;
        radioButtons[8] = jRadioButton9;

        for (int i = 0; i < 9; i++) {
            if (radioButtons[i].isSelected()) {
                sql += " AND e.nombre = '" + radioButtons[i].getText() + "'";
                break;
            }
        }
    }

    // Imprimir la consulta SQL para verificar que está generada correctamente
    System.out.println("Consulta SQL generada: " + sql);

    try {
        // Ejecutar la consulta
        stmt = con.createStatement();
        resul = stmt.executeQuery(sql);
        
        // Configurar columnas
        String[] nombresColumnas = {
        "Codigo",
        "Direccion", 
        "CodPostal", 
        "Cargo", 
        "FechaPedido", 
        "FechaEnvio", 
        "FechaEntrega", 
        "Ciudad", 
        "CompaniaEnvio", 
        "Empleado", 
        "CompaniaCliente"
        };
        
        modeloTabla.setRowCount(0);  // Limpia las filas actuales
        modeloTabla.setColumnCount(0); // Limpia las columnas actuales

        for (String nombreColumna : nombresColumnas) {
            modeloTabla.addColumn(nombreColumna);
        }

        // Cargar los datos en el modelo
        while (resul.next()) {
        Object[] fila = new Object[nombresColumnas.length];
        for (int j = 1; j <= nombresColumnas.length; j++) {
            fila[j - 1] = resul.getObject(j);
        }
        modeloTabla.addRow(fila);
        }

        // Asignar el modelo a la tabla
        tabla.setModel(modeloTabla);
        
        // Hacer la primera columna (Codigo) invisible
            tabla.getColumnModel().getColumn(0).setMinWidth(0);
            tabla.getColumnModel().getColumn(0).setMaxWidth(0);
            tabla.getColumnModel().getColumn(0).setWidth(0);

    } catch (Exception e) {
        e.printStackTrace(System.out);
        // Cerrar la conexión
        try {
            con.close(); //con contiene la conexión a la base de datos.
        } catch (SQLException ex) {
            System.out.println("Oops");
        }
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int filaSeleccionada = tabla.getSelectedRow(); // tablaPedidos es tu JTable
        if (filaSeleccionada >= 0) {
        // Recupera los datos de la fila seleccionada
        int columnCount = tabla.getColumnCount();
        Object[] datosFila = new Object[columnCount];
        for (int i = 0; i < columnCount; i++) {
            datosFila[i] = tabla.getValueAt(filaSeleccionada, i);
        }

        // Abre la ventana de modificación con los datos de la fila
        ModificarPedido ventanaModificar = new ModificarPedido(tabla, datosFila, filaSeleccionada, con);
        ventanaModificar.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        ventanaModificar.setTitle("Modificar pedido");
        ventanaModificar.setVisible(true);
        } else {
        JOptionPane.showMessageDialog(this, "Por favor selecciona una fila para modificar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int filaSeleccionada = tabla.getSelectedRow();
            if (filaSeleccionada >= 0) {
                Object valorCelda = tabla.getValueAt(filaSeleccionada, 0); // Siempre obtenemos el valor de la columna 0
                int codigoPedido = (int) valorCelda;
                System.out.println("Código del pedido: " + codigoPedido);
                
                DetallePedidoDialog dialog = new DetallePedidoDialog(BuscarPedidos.this, con, codigoPedido);
                dialog.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
                //dialog.setVisible(true);
            }
            else {
                JOptionPane.showMessageDialog(this, "Por favor selecciona una fila para modificar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }
            
            
    }//GEN-LAST:event_jButton5ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscarPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscarPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscarPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscarPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuscarPedidos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> ciudadJComboBox;
    private javax.swing.JList<String> compEnviosJList;
    private javax.swing.JTextField fechaPedidoJTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JRadioButton jRadioButton9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nombreCompJTextField;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
}
