/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package proyectout1cperales;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.*;
import java.sql.*;

/**
 *
 * @author Meu
 */
public class SeleccionarClienteDialog extends javax.swing.JDialog {

    /**
     * Creates new form SeleccionarClienteDialog
     */
    public SeleccionarClienteDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }
    
    private JTable tablaClientes;
    private JTextField buscadorTextField;
    private DefaultTableModel modeloTabla;
    private Connection con;
    private String nombreCompaniaSeleccionada;

    public SeleccionarClienteDialog(JFrame parent, Connection conexion) {
        super(parent, "Seleccionar Cliente", true);
        this.con = conexion;
        this.nombreCompaniaSeleccionada = null;

        // Configurar el layout
        setLayout(new BorderLayout());
        setSize(500, 400);
        setLocationRelativeTo(parent);

        // Panel superior con el campo de búsqueda
        JPanel panelSuperior = new JPanel();
        panelSuperior.setLayout(new BorderLayout());
        panelSuperior.add(new JLabel("Buscar: "), BorderLayout.WEST);
        
        buscadorTextField = new JTextField();
        panelSuperior.add(buscadorTextField, BorderLayout.CENTER);
        add(panelSuperior, BorderLayout.NORTH);

        // Modelo de la tabla
        modeloTabla = new DefaultTableModel(new String[]{"Código", "Nombre Compañía"}, 0);
        tablaClientes = new JTable(modeloTabla);
        cargarClientes("");  // Cargar todos los clientes inicialmente
        add(new JScrollPane(tablaClientes), BorderLayout.CENTER);

        // Panel con botón de selección
        JPanel panelBotones = new JPanel();
        JButton seleccionarButton = new JButton("Seleccionar");
        panelBotones.add(seleccionarButton);
        add(panelBotones, BorderLayout.SOUTH);

        // Evento para filtrar clientes en la búsqueda
        buscadorTextField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                cargarClientes(buscadorTextField.getText().trim());
            }
        });

        // Evento para seleccionar un cliente
        seleccionarButton.addActionListener(e -> {
            int filaSeleccionada = tablaClientes.getSelectedRow();
            if (filaSeleccionada != -1) {
                nombreCompaniaSeleccionada = (String) modeloTabla.getValueAt(filaSeleccionada, 1);
                dispose();
            } else {
                JOptionPane.showMessageDialog(SeleccionarClienteDialog.this, 
                    "Seleccione un cliente", "Aviso", JOptionPane.WARNING_MESSAGE);
            }
        });
    }

    private void cargarClientes(String filtro) {
        modeloTabla.setRowCount(0); // Limpiar tabla

        try {
            Statement stmt = con.createStatement();
            String sql = "SELECT codigo, nomCompania FROM Clientes";
            if (!filtro.isEmpty()) {
                sql += " WHERE nomCompania LIKE '%" + filtro + "%'";
            }
            ResultSet resul = stmt.executeQuery(sql);

            while (resul.next()) {
                modeloTabla.addRow(new Object[]{resul.getInt("codigo"), resul.getString("nomCompania")});
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public String getNombreCompaniaSeleccionada() {
        return nombreCompaniaSeleccionada;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
